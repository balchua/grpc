apiVersion: v1
kind: Template
labels:
    template: "grpc-1.6"
metadata:
  name: grpc-template
  annotations:
    description: "Template to deploy Person grpc service"
objects:
- kind: Secret
  apiVersion: v1
  metadata:
    name: grpc-db-accesss
  data:
  stringData:
    password: app-string
- kind: DeploymentConfig
  apiVersion: v1
  metadata:
    generation: 2
    labels:
      app: grpc
      deployconfig: grpc-deploy
    name: grpc
    namespace: myproject
  spec:
    replicas: 2
    selector:
      app: grpc
      deployconfig: grpc-deploy
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        labels:
          app: grpc
          deployconfig: grpc-deploy
      spec:
        containers:
          - image: "172.30.1.1:5000/myproject/grpc:1.6"
            imagePullPolicy: IfNotPresent
            name: grpc
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
              - mountPath: /data/files
                name: grpc-volume-1
            env:
              - name: TZ
                value: Asia/Singapore
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
            - name: grpc-volume-1
              persistentVolumeClaim:
                claimName: grpc-volume-claim
    test: false
    triggers:
      - type: ConfigChange
- kind: Service
  apiVersion: v1
  metadata:
    name: grpc-service
    namespace: myproject
  spec:
    clusterIP: 172.30.224.245
    ports:
      - name: grpc-service-port
        protocol: TCP
        port: 9999
        targetPort: 50051
        nodePort: 30001
    selector:
      app: grpc
      deployconfig: grpc-deploy
    type: NodePort
    sessionAffinity: None
  status:
    loadBalancer: {}
#- kind: Route
#  apiVersion: v1
#  metadata:
#    name: person-grpc-route-conf-1.0
#    namespace: myproject
#    spec:
#    host: myhostname
#    to:
#      kind: Service
#      name: person-grpc-service-port-1.0
#      weight: 100
#    port:
#      targetPort: sampleweb-service-port-name-1-1
#    wildcardPolicy: None